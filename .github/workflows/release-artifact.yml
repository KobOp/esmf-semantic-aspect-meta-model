name: Release Artifact
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version number of the release'
        required: true
jobs:
  build-and-release:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        server-id: ossrh
        server-username: OSSRH_USERNAME
        server-password: OSSRH_TOKEN
        gpg-private-key: ${{ secrets.PGP_KEY }}
        gpg-passphrase: PGP_KEY_PASSWORD
        overwrite-settings: true

    - name: Create release branch if not exists
      continue-on-error: true
      run: |
        release_version=${{ github.event.inputs.release_version }}
        release_branch_name=${release_version%.*}.x
        echo "release_branch_name=$release_branch_name" >> $GITHUB_ENV

    - name: Set release version in antora.yml
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.version = "${{ github.event.inputs.release_version }}"' documentation/antora.yml

    - name: Build SAMM artifact and release to OSSRH
      run: |
        set -x
        echo ">>> Using parent pom:"
        cat pom.xml
        echo ">>> Using meta model pom:"
        cat esmf-semantic-aspect-meta-model/pom.xml
        echo ">>> Using settings.xml:"
        cat ~/.m2/settings.xml
        rm -rf ~/.m2/repository/org/eclipse/esmf
        ./mvnw -B versions:set -DnewVersion=${{ github.event.inputs.release_version }}
        ./mvnw -B versions:commit
        # Since the meta model project itself does not inherit from the parent, we must set its version separately
        ./mvnw -B versions:set -DnewVersion=${{ github.event.inputs.release_version }} -pl esmf-semantic-aspect-meta-model
        ./mvnw -B versions:commit -pl esmf-semantic-aspect-meta-model
        ./mvnw -B clean generate-resources -pl documentation -Pantora
        ./mvnw -B -U clean install -pl esmf-samm-build-plugin
        ./mvnw -B -U clean deploy -pl esmf-semantic-aspect-meta-model -Psign
        cd build/
        mv site SAMM-${{ github.event.inputs.release_version }}
        zip -r ../SAMM-${{ github.event.inputs.release_version }}-specification.zip SAMM-${{ github.event.inputs.release_version }}
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
        PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}

    # If the deployment to OSSRH went through, the following steps will
    # - Commit updated version to release branch
    # - Create Github release

    - name: Commit version changes and push to upstream repository
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git fetch
        git checkout -b $release_branch_name --track origin/$release_branch_name || true
        git checkout -b $release_branch_name
        git add .
        if git commit -m "Add version ${{ github.event.inputs.release_version }}"; then
          git push origin ${{ env.release_branch_name }}
        fi

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        body: "Create Github release"
        tag_name: v${{ github.event.inputs.release_version }}
        target_commitish: ${{ env.release_branch_name }}
        draft: false
        prerelease: false
        files: |
          esmf-semantic-aspect-meta-model/target/*.jar
          esmf-semantic-aspect-meta-model/target/*.asc
          SAMM-*-specification.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

